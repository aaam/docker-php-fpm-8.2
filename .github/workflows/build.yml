---

# -------------------------------------------------------------------------------------------------
# Job Name
# -------------------------------------------------------------------------------------------------
name: build


# -------------------------------------------------------------------------------------------------
# When to run
# -------------------------------------------------------------------------------------------------
on:
  # Runs on Pull Requests
  pull_request:
  # Runs on Push
  push:


jobs:

  # -----------------------------------------------------------------------------------------------
  # Job: BUILD
  # -----------------------------------------------------------------------------------------------
  build:
    name: "[ PHP-${{ matrix.version }} (${{ matrix.arch }}) ]"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '8.2'
        arch:
          - 'linux/amd64'
          - 'linux/arm64'
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set Docker tag
        id: tag
        uses: cytopia/docker-tag@v0.2

      # ------------------------------------------------------------
      # Build
      # ------------------------------------------------------------
      - name: Build
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          retry make build ARCH=${ARCH}
        env:
          ARCH: ${{ matrix.arch }}
          RETRIES: 20
          PAUSE: 10

      # ------------------------------------------------------------
      # Test
      # ------------------------------------------------------------
      - name: Test Docker Image
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          retry make test ARCH=${ARCH}
        env:
          ARCH: ${{ matrix.arch }}
          RETRIES: 20
          PAUSE: 10

      - name: Test Repository Readme
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          retry make update-readme ARCH=${ARCH}
          git diff --quiet || { echo "Build Changes"; git diff; git status; false; }
        env:
          ARCH: ${{ matrix.arch }}
          RETRIES: 20
          PAUSE: 10


      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: Publish architecture images (only repo owner)
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          # Login
          retry make login USER=${{ secrets.DOCKERHUB_USERNAME }} PASS=${{ secrets.DOCKERHUB_PASSWORD }}

          # Push arch-specific image (for later manifest creation)
          retry make push-arch TAG=${{ steps.tag.outputs.docker-tag }} ARCH=${ARCH}
        env:
          ARCH: ${{ matrix.arch }}
          RETRIES: 20
          PAUSE: 10
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
        if: github.event.pull_request.base.repo.id == github.event.pull_request.head.repo.id
            && (
              (github.event_name == 'schedule' && (github.ref == 'refs/heads/master'   || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && (github.ref == 'refs/heads/master'   || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && startsWith(github.ref, 'refs/heads/release-'))
            )

  # -----------------------------------------------------------------------------------------------
  # Job: DEPLOY
  # -----------------------------------------------------------------------------------------------
  deploy:
    needs: [build]
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '8.2'
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Docker tag
        id: tag
        uses: cytopia/docker-tag@v0.2

      # ------------------------------------------------------------
      # Deploy
      # ------------------------------------------------------------
      - name: Publish final multi-arch image (only repo owner)
        run: |
          retry() {
            for n in $(seq ${RETRIES}); do
              echo "[${n}/${RETRIES}] ${*}";
              if eval "${*}"; then
                echo "[SUCC] ${n}/${RETRIES}";
                return 0;
              fi;
              sleep ${PAUSE};
              echo "[FAIL] ${n}/${RETRIES}";
            done;
            return 1;
          }
          # Login
          retry make login USER=${{ secrets.DOCKERHUB_USERNAME }} PASS=${{ secrets.DOCKERHUB_PASSWORD }}

          # Create manifest
          retry make manifest-create TAG=${{ steps.tag.outputs.docker-tag }} ARCH="amd64 arm64"

          # Push manifest
          retry make manifest-push TAG=${{ steps.tag.outputs.docker-tag }}
        env:
          RETRIES: 20
          PAUSE: 10
        # https://help.github.com/en/github/automating-your-workflow-with-github-actions/contexts-and-expression-syntax-for-github-actions#functions
        if: github.event.pull_request.base.repo.id == github.event.pull_request.head.repo.id
            && (
              (github.event_name == 'schedule' && (github.ref == 'refs/heads/master'   || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && (github.ref == 'refs/heads/master'   || startsWith(github.ref, 'refs/tags/')))
              ||
              (github.event_name == 'push'     && startsWith(github.ref, 'refs/heads/release-'))
            )
